// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The unauthenticated Route should have valid snapshot 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <HashRouter>
    <UnauthenticatedRoute
        component={[Function]}
        path="/login"
        routes={Object {}}
        session={
            Object {
                "isAuthenticated": true,
              }
        }
    />
</HashRouter>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": HashRouter {
      "_reactInternalFiber": FiberNode {
        "_debugID": 33,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 32,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 30,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 30,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div />,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": <UnauthenticatedRoute
                                                                    component={[Function]}
                                                                    path="/login"
                                                                    routes={Object {}}
                                                                    session={
                                                                                            Object {
                                                                                                                    "isAuthenticated": true,
                                                                                                                  }
                                                                    }
                                            />,
                                                                }
                      }
/>,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": <UnauthenticatedRoute
                                                                    component={[Function]}
                                                                    path="/login"
                                                                    routes={Object {}}
                                                                    session={
                                                                                            Object {
                                                                                                                    "isAuthenticated": true,
                                                                                                                  }
                                                                    }
                                            />,
                                                                }
                      }
/>,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "children": <UnauthenticatedRoute
                                                  component={[Function]}
                                                  path="/login"
                                                  routes={Object {}}
                                                  session={
                                                                    Object {
                                                                                      "isAuthenticated": true,
                                                                                    }
                                                  }
                                />,
                                              }
                }
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div />,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "children": <UnauthenticatedRoute
                                                        component={[Function]}
                                                        path="/login"
                                                        routes={Object {}}
                                                        session={
                                                                            Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                                        }
                                    />,
                                                    }
                  }
/>,
              },
              "callbackList": null,
              "capturedValues": null,
              "expirationTime": 0,
              "first": null,
              "hasForceUpdate": false,
              "isInitialized": true,
              "isProcessing": false,
              "last": null,
            },
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 34,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 35,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": Object {
              "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.spec.js",
              "lineNumber": 17,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 36,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.js",
                "lineNumber": 13,
              },
              "alternate": null,
              "child": null,
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "path": "/login",
                "render": [Function],
              },
              "memoizedState": Object {
                "match": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "path": "/login",
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Route {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "router": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 2,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "route": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                    },
                  },
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "router": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 2,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "route": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                    },
                  },
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "router": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 2,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "route": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                    },
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "router": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 2,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "route": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                    },
                  },
                },
                "props": Object {
                  "path": "/login",
                  "render": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "match": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "component": [Function],
              "path": "/login",
              "routes": Object {},
              "session": Object {
                "isAuthenticated": true,
              },
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "component": [Function],
              "path": "/login",
              "routes": Object {},
              "session": Object {
                "isAuthenticated": true,
              },
            },
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": null,
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <UnauthenticatedRoute
              component={[Function]}
              path="/login"
              routes={Object {}}
              session={
                            Object {
                                          "isAuthenticated": true,
                                        }
              }
/>,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 2,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "memoizedState": Object {
            "match": Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <UnauthenticatedRoute
              component={[Function]}
              path="/login"
              routes={Object {}}
              session={
                            Object {
                                          "isAuthenticated": true,
                                        }
              }
/>,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 2,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": Router {
            "__reactInternalMemoizedMaskedChildContext": Object {
              "router": undefined,
            },
            "__reactInternalMemoizedMergedChildContext": Object {
              "router": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 2,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "route": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                },
              },
            },
            "__reactInternalMemoizedUnmaskedChildContext": Object {},
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {
              "router": undefined,
            },
            "props": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 2,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "refs": Object {},
            "state": Object {
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              },
            },
            "unlisten": [Function],
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "children": <UnauthenticatedRoute
            component={[Function]}
            path="/login"
            routes={Object {}}
            session={
                        Object {
                                    "isAuthenticated": true,
                                  }
            }
/>,
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <UnauthenticatedRoute
            component={[Function]}
            path="/login"
            routes={Object {}}
            session={
                        Object {
                                    "isAuthenticated": true,
                                  }
            }
/>,
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 32,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 30,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 30,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div />,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 1,
                "first": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": <UnauthenticatedRoute
                                                                    component={[Function]}
                                                                    path="/login"
                                                                    routes={Object {}}
                                                                    session={
                                                                                            Object {
                                                                                                                    "isAuthenticated": true,
                                                                                                                  }
                                                                    }
                                            />,
                                                                }
                      }
/>,
                  },
                },
                "hasForceUpdate": false,
                "isInitialized": false,
                "isProcessing": false,
                "last": Object {
                  "callback": null,
                  "capturedValue": null,
                  "expirationTime": 1,
                  "isForced": false,
                  "isReplace": false,
                  "next": null,
                  "partialState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": <UnauthenticatedRoute
                                                                    component={[Function]}
                                                                    path="/login"
                                                                    routes={Object {}}
                                                                    session={
                                                                                            Object {
                                                                                                                    "isAuthenticated": true,
                                                                                                                  }
                                                                    }
                                            />,
                                                                }
                      }
/>,
                  },
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                                Object {
                                                "children": <UnauthenticatedRoute
                                                  component={[Function]}
                                                  path="/login"
                                                  routes={Object {}}
                                                  session={
                                                                    Object {
                                                                                      "isAuthenticated": true,
                                                                                    }
                                                  }
                                />,
                                              }
                }
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div />,
              "context": Object {},
              "current": [Circular],
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "children": <UnauthenticatedRoute
                                                        component={[Function]}
                                                        path="/login"
                                                        routes={Object {}}
                                                        session={
                                                                            Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                                        }
                                    />,
                                                    }
                  }
/>,
              },
              "callbackList": null,
              "capturedValues": null,
              "expirationTime": 0,
              "first": null,
              "hasForceUpdate": false,
              "isInitialized": true,
              "isProcessing": false,
              "last": null,
            },
          },
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 2,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
      "props": Object {
        "children": <UnauthenticatedRoute
          component={[Function]}
          path="/login"
          routes={Object {}}
          session={
                    Object {
                              "isAuthenticated": true,
                            }
          }
/>,
      },
      "refs": Object {},
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <UnauthenticatedRoute
        component={[Function]}
        path="/login"
        routes={Object {}}
        session={
                Object {
                        "isAuthenticated": true,
                      }
        }
/>,
    },
    "ref": null,
    "rendered": Object {
      "instance": Router {
        "__reactInternalMemoizedMaskedChildContext": Object {
          "router": undefined,
        },
        "__reactInternalMemoizedMergedChildContext": Object {
          "router": Object {
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 2,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
            "route": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              },
            },
          },
        },
        "__reactInternalMemoizedUnmaskedChildContext": Object {},
        "_reactInternalFiber": FiberNode {
          "_debugID": 34,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 33,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 32,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 30,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": FiberNode {
                  "_debugID": 30,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": [Circular],
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "callbackList": null,
                    "capturedValues": null,
                    "expirationTime": 1,
                    "first": Object {
                      "callback": null,
                      "capturedValue": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": <UnauthenticatedRoute
                                                                                component={[Function]}
                                                                                path="/login"
                                                                                routes={Object {}}
                                                                                session={
                                                                                                            Object {
                                                                                                                                        "isAuthenticated": true,
                                                                                                                                      }
                                                                                }
                                                    />,
                                                                            }
                          }
/>,
                      },
                    },
                    "hasForceUpdate": false,
                    "isInitialized": false,
                    "isProcessing": false,
                    "last": Object {
                      "callback": null,
                      "capturedValue": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": <UnauthenticatedRoute
                                                                                component={[Function]}
                                                                                path="/login"
                                                                                routes={Object {}}
                                                                                session={
                                                                                                            Object {
                                                                                                                                        "isAuthenticated": true,
                                                                                                                                      }
                                                                                }
                                                    />,
                                                                            }
                          }
/>,
                      },
                    },
                  },
                },
                "child": [Circular],
                "effectTag": 32,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "children": <UnauthenticatedRoute
                                                              component={[Function]}
                                                              path="/login"
                                                              routes={Object {}}
                                                              session={
                                                                                    Object {
                                                                                                          "isAuthenticated": true,
                                                                                                        }
                                                              }
                                        />,
                                                          }
                    }
/>,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div />,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": <UnauthenticatedRoute
                                                                    component={[Function]}
                                                                    path="/login"
                                                                    routes={Object {}}
                                                                    session={
                                                                                            Object {
                                                                                                                    "isAuthenticated": true,
                                                                                                                  }
                                                                    }
                                            />,
                                                                }
                      }
/>,
                  },
                  "callbackList": null,
                  "capturedValues": null,
                  "expirationTime": 0,
                  "first": null,
                  "hasForceUpdate": false,
                  "isInitialized": true,
                  "isProcessing": false,
                  "last": null,
                },
              },
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 32,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 30,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": FiberNode {
                  "_debugID": 30,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": [Circular],
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "callbackList": null,
                    "capturedValues": null,
                    "expirationTime": 1,
                    "first": Object {
                      "callback": null,
                      "capturedValue": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": <UnauthenticatedRoute
                                                                                component={[Function]}
                                                                                path="/login"
                                                                                routes={Object {}}
                                                                                session={
                                                                                                            Object {
                                                                                                                                        "isAuthenticated": true,
                                                                                                                                      }
                                                                                }
                                                    />,
                                                                            }
                          }
/>,
                      },
                    },
                    "hasForceUpdate": false,
                    "isInitialized": false,
                    "isProcessing": false,
                    "last": Object {
                      "callback": null,
                      "capturedValue": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": <UnauthenticatedRoute
                                                                                component={[Function]}
                                                                                path="/login"
                                                                                routes={Object {}}
                                                                                session={
                                                                                                            Object {
                                                                                                                                        "isAuthenticated": true,
                                                                                                                                      }
                                                                                }
                                                    />,
                                                                            }
                          }
/>,
                      },
                    },
                  },
                },
                "child": [Circular],
                "effectTag": 32,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "children": <UnauthenticatedRoute
                                                              component={[Function]}
                                                              path="/login"
                                                              routes={Object {}}
                                                              session={
                                                                                    Object {
                                                                                                          "isAuthenticated": true,
                                                                                                        }
                                                              }
                                        />,
                                                          }
                    }
/>,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div />,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": <UnauthenticatedRoute
                                                                    component={[Function]}
                                                                    path="/login"
                                                                    routes={Object {}}
                                                                    session={
                                                                                            Object {
                                                                                                                    "isAuthenticated": true,
                                                                                                                  }
                                                                    }
                                            />,
                                                                }
                      }
/>,
                  },
                  "callbackList": null,
                  "capturedValues": null,
                  "expirationTime": 0,
                  "first": null,
                  "hasForceUpdate": false,
                  "isInitialized": true,
                  "isProcessing": false,
                  "last": null,
                },
              },
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": HashRouter {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 2,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
              "props": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 35,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": Object {
              "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.spec.js",
              "lineNumber": 17,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 36,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.js",
                "lineNumber": 13,
              },
              "alternate": null,
              "child": null,
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "path": "/login",
                "render": [Function],
              },
              "memoizedState": Object {
                "match": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "path": "/login",
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Route {
                "__reactInternalMemoizedMaskedChildContext": Object {
                  "router": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 2,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "route": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                    },
                  },
                },
                "__reactInternalMemoizedMergedChildContext": Object {
                  "router": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 2,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "route": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                    },
                  },
                },
                "__reactInternalMemoizedUnmaskedChildContext": Object {
                  "router": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 2,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "route": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                    },
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {
                  "router": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 2,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "route": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                    },
                  },
                },
                "props": Object {
                  "path": "/login",
                  "render": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "match": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "component": [Function],
              "path": "/login",
              "routes": Object {},
              "session": Object {
                "isAuthenticated": true,
              },
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "component": [Function],
              "path": "/login",
              "routes": Object {},
              "session": Object {
                "isAuthenticated": true,
              },
            },
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": null,
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <UnauthenticatedRoute
              component={[Function]}
              path="/login"
              routes={Object {}}
              session={
                            Object {
                                          "isAuthenticated": true,
                                        }
              }
/>,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 2,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "memoizedState": Object {
            "match": Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <UnauthenticatedRoute
              component={[Function]}
              path="/login"
              routes={Object {}}
              session={
                            Object {
                                          "isAuthenticated": true,
                                        }
              }
/>,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 2,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 33,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 32,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 30,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": FiberNode {
                  "_debugID": 30,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": [Circular],
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "callbackList": null,
                    "capturedValues": null,
                    "expirationTime": 1,
                    "first": Object {
                      "callback": null,
                      "capturedValue": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": <UnauthenticatedRoute
                                                                                component={[Function]}
                                                                                path="/login"
                                                                                routes={Object {}}
                                                                                session={
                                                                                                            Object {
                                                                                                                                        "isAuthenticated": true,
                                                                                                                                      }
                                                                                }
                                                    />,
                                                                            }
                          }
/>,
                      },
                    },
                    "hasForceUpdate": false,
                    "isInitialized": false,
                    "isProcessing": false,
                    "last": Object {
                      "callback": null,
                      "capturedValue": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": <UnauthenticatedRoute
                                                                                component={[Function]}
                                                                                path="/login"
                                                                                routes={Object {}}
                                                                                session={
                                                                                                            Object {
                                                                                                                                        "isAuthenticated": true,
                                                                                                                                      }
                                                                                }
                                                    />,
                                                                            }
                          }
/>,
                      },
                    },
                  },
                },
                "child": [Circular],
                "effectTag": 32,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "children": <UnauthenticatedRoute
                                                              component={[Function]}
                                                              path="/login"
                                                              routes={Object {}}
                                                              session={
                                                                                    Object {
                                                                                                          "isAuthenticated": true,
                                                                                                        }
                                                              }
                                        />,
                                                          }
                    }
/>,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div />,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": <UnauthenticatedRoute
                                                                    component={[Function]}
                                                                    path="/login"
                                                                    routes={Object {}}
                                                                    session={
                                                                                            Object {
                                                                                                                    "isAuthenticated": true,
                                                                                                                  }
                                                                    }
                                            />,
                                                                }
                      }
/>,
                  },
                  "callbackList": null,
                  "capturedValues": null,
                  "expirationTime": 0,
                  "first": null,
                  "hasForceUpdate": false,
                  "isInitialized": true,
                  "isProcessing": false,
                  "last": null,
                },
              },
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 32,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "memoizedState": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 30,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": FiberNode {
                  "_debugID": 30,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": [Circular],
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 1,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": null,
                    "callbackList": null,
                    "capturedValues": null,
                    "expirationTime": 1,
                    "first": Object {
                      "callback": null,
                      "capturedValue": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": <UnauthenticatedRoute
                                                                                component={[Function]}
                                                                                path="/login"
                                                                                routes={Object {}}
                                                                                session={
                                                                                                            Object {
                                                                                                                                        "isAuthenticated": true,
                                                                                                                                      }
                                                                                }
                                                    />,
                                                                            }
                          }
/>,
                      },
                    },
                    "hasForceUpdate": false,
                    "isInitialized": false,
                    "isProcessing": false,
                    "last": Object {
                      "callback": null,
                      "capturedValue": null,
                      "expirationTime": 1,
                      "isForced": false,
                      "isReplace": false,
                      "next": null,
                      "partialState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                                                    Object {
                                                                              "children": <UnauthenticatedRoute
                                                                                component={[Function]}
                                                                                path="/login"
                                                                                routes={Object {}}
                                                                                session={
                                                                                                            Object {
                                                                                                                                        "isAuthenticated": true,
                                                                                                                                      }
                                                                                }
                                                    />,
                                                                            }
                          }
/>,
                      },
                    },
                  },
                },
                "child": [Circular],
                "effectTag": 32,
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "children": <UnauthenticatedRoute
                                                              component={[Function]}
                                                              path="/login"
                                                              routes={Object {}}
                                                              session={
                                                                                    Object {
                                                                                                          "isAuthenticated": true,
                                                                                                        }
                                                              }
                                        />,
                                                          }
                    }
/>,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div />,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": <UnauthenticatedRoute
                                                                    component={[Function]}
                                                                    path="/login"
                                                                    routes={Object {}}
                                                                    session={
                                                                                            Object {
                                                                                                                    "isAuthenticated": true,
                                                                                                                  }
                                                                    }
                                            />,
                                                                }
                      }
/>,
                  },
                  "callbackList": null,
                  "capturedValues": null,
                  "expirationTime": 0,
                  "first": null,
                  "hasForceUpdate": false,
                  "isInitialized": true,
                  "isProcessing": false,
                  "last": null,
                },
              },
              "sibling": null,
              "stateNode": WrapperComponent {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "refs": Object {},
                "state": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": HashRouter {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 2,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
              "props": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {
          "router": undefined,
        },
        "props": Object {
          "children": <UnauthenticatedRoute
            component={[Function]}
            path="/login"
            routes={Object {}}
            session={
                        Object {
                                    "isAuthenticated": true,
                                  }
            }
/>,
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 2,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "refs": Object {},
        "state": Object {
          "match": Object {
            "isExact": true,
            "params": Object {},
            "path": "/",
            "url": "/",
          },
        },
        "unlisten": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <UnauthenticatedRoute
          component={[Function]}
          path="/login"
          routes={Object {}}
          session={
                    Object {
                              "isAuthenticated": true,
                            }
          }
/>,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 2,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "component": [Function],
          "path": "/login",
          "routes": Object {},
          "session": Object {
            "isAuthenticated": true,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": Route {
            "__reactInternalMemoizedMaskedChildContext": Object {
              "router": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 2,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "route": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                },
              },
            },
            "__reactInternalMemoizedMergedChildContext": Object {
              "router": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 2,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "route": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": null,
                },
              },
            },
            "__reactInternalMemoizedUnmaskedChildContext": Object {
              "router": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 2,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "route": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                },
              },
            },
            "_reactInternalFiber": FiberNode {
              "_debugID": 36,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 35,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": Object {
                  "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.spec.js",
                  "lineNumber": 17,
                },
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": [Function],
                  "path": "/login",
                  "routes": Object {},
                  "session": Object {
                    "isAuthenticated": true,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": [Function],
                  "path": "/login",
                  "routes": Object {},
                  "session": Object {
                    "isAuthenticated": true,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 34,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 33,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 32,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 30,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 32,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 30,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": HashRouter {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "props": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 2,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": Object {
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 2,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 33,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 32,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 30,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 32,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 30,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": HashRouter {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "props": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": Router {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "router": undefined,
                    },
                    "__reactInternalMemoizedMergedChildContext": Object {
                      "router": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 2,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "route": Object {
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                        },
                      },
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {},
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {
                      "router": undefined,
                    },
                    "props": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                    },
                    "unlisten": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": Object {
                "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.js",
                "lineNumber": 13,
              },
              "alternate": null,
              "child": null,
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "path": "/login",
                "render": [Function],
              },
              "memoizedState": Object {
                "match": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "path": "/login",
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 35,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": Object {
                  "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.spec.js",
                  "lineNumber": 17,
                },
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": [Function],
                  "path": "/login",
                  "routes": Object {},
                  "session": Object {
                    "isAuthenticated": true,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": [Function],
                  "path": "/login",
                  "routes": Object {},
                  "session": Object {
                    "isAuthenticated": true,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 34,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 33,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 32,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 30,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 32,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 30,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": HashRouter {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "props": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 2,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": Object {
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 2,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 33,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 32,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 30,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 32,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 30,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 1,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 1,
                            "first": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                            "hasForceUpdate": false,
                            "isInitialized": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "capturedValue": null,
                              "expirationTime": 1,
                              "isForced": false,
                              "isReplace": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                                                    Object {
                                                                                                      "children": <UnauthenticatedRoute
                                                                                                        component={[Function]}
                                                                                                        path="/login"
                                                                                                        routes={Object {}}
                                                                                                        session={
                                                                                                                                            Object {
                                                                                                                                                                                "isAuthenticated": true,
                                                                                                                                                                              }
                                                                                                        }
                                                                    />,
                                                                                                    }
                                  }
/>,
                              },
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 32,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedWork": null,
                          "firstBatch": null,
                          "hydrate": false,
                          "nextScheduledRoot": null,
                          "pendingChildren": null,
                          "pendingCommitExpirationTime": 0,
                          "pendingContext": null,
                          "remainingExpirationTime": 0,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "callbackList": null,
                          "capturedValues": null,
                          "expirationTime": 0,
                          "first": null,
                          "hasForceUpdate": false,
                          "isInitialized": true,
                          "isProcessing": false,
                          "last": null,
                        },
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": HashRouter {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "props": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": Router {
                    "__reactInternalMemoizedMaskedChildContext": Object {
                      "router": undefined,
                    },
                    "__reactInternalMemoizedMergedChildContext": Object {
                      "router": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 2,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "route": Object {
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                        },
                      },
                    },
                    "__reactInternalMemoizedUnmaskedChildContext": Object {},
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {
                      "router": undefined,
                    },
                    "props": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                    },
                    "unlisten": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": [Circular],
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {
              "router": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 2,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "route": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                },
              },
            },
            "props": Object {
              "path": "/login",
              "render": [Function],
            },
            "refs": Object {},
            "state": Object {
              "match": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "path": "/login",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": HashRouter {
        "_reactInternalFiber": FiberNode {
          "_debugID": 33,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 32,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 30,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 30,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div />,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "capturedValues": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "children": <UnauthenticatedRoute
                                                                          component={[Function]}
                                                                          path="/login"
                                                                          routes={Object {}}
                                                                          session={
                                                                                                    Object {
                                                                                                                              "isAuthenticated": true,
                                                                                                                            }
                                                                          }
                                                />,
                                                                      }
                        }
/>,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "children": <UnauthenticatedRoute
                                                                          component={[Function]}
                                                                          path="/login"
                                                                          routes={Object {}}
                                                                          session={
                                                                                                    Object {
                                                                                                                              "isAuthenticated": true,
                                                                                                                            }
                                                                          }
                                                />,
                                                                      }
                        }
/>,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "children": <UnauthenticatedRoute
                                                        component={[Function]}
                                                        path="/login"
                                                        routes={Object {}}
                                                        session={
                                                                            Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                                        }
                                    />,
                                                    }
                  }
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div />,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "children": <UnauthenticatedRoute
                                                              component={[Function]}
                                                              path="/login"
                                                              routes={Object {}}
                                                              session={
                                                                                    Object {
                                                                                                          "isAuthenticated": true,
                                                                                                        }
                                                              }
                                        />,
                                                          }
                    }
/>,
                },
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 0,
                "first": null,
                "hasForceUpdate": false,
                "isInitialized": true,
                "isProcessing": false,
                "last": null,
              },
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 34,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 35,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": Object {
                "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.spec.js",
                "lineNumber": 17,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 36,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.js",
                  "lineNumber": 13,
                },
                "alternate": null,
                "child": null,
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "path": "/login",
                  "render": [Function],
                },
                "memoizedState": Object {
                  "match": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "path": "/login",
                  "render": [Function],
                },
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Route {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "router": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "route": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                      },
                    },
                  },
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "router": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "route": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                      },
                    },
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "router": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "route": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                      },
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {
                    "router": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "route": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                      },
                    },
                  },
                  "props": Object {
                    "path": "/login",
                    "render": [Function],
                  },
                  "refs": Object {},
                  "state": Object {
                    "match": null,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": [Function],
                "path": "/login",
                "routes": Object {},
                "session": Object {
                  "isAuthenticated": true,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": [Function],
                "path": "/login",
                "routes": Object {},
                "session": Object {
                  "isAuthenticated": true,
                },
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": null,
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 2,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 2,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": Router {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "router": undefined,
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "router": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 2,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "route": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                  },
                },
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {},
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {
                "router": undefined,
              },
              "props": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 2,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
              },
              "unlisten": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <UnauthenticatedRoute
              component={[Function]}
              path="/login"
              routes={Object {}}
              session={
                            Object {
                                          "isAuthenticated": true,
                                        }
              }
/>,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <UnauthenticatedRoute
              component={[Function]}
              path="/login"
              routes={Object {}}
              session={
                            Object {
                                          "isAuthenticated": true,
                                        }
              }
/>,
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 32,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 30,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 30,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div />,
                  "context": Object {},
                  "current": [Circular],
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "callbackList": null,
                  "capturedValues": null,
                  "expirationTime": 1,
                  "first": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "children": <UnauthenticatedRoute
                                                                          component={[Function]}
                                                                          path="/login"
                                                                          routes={Object {}}
                                                                          session={
                                                                                                    Object {
                                                                                                                              "isAuthenticated": true,
                                                                                                                            }
                                                                          }
                                                />,
                                                                      }
                        }
/>,
                    },
                  },
                  "hasForceUpdate": false,
                  "isInitialized": false,
                  "isProcessing": false,
                  "last": Object {
                    "callback": null,
                    "capturedValue": null,
                    "expirationTime": 1,
                    "isForced": false,
                    "isReplace": false,
                    "next": null,
                    "partialState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "children": <UnauthenticatedRoute
                                                                          component={[Function]}
                                                                          path="/login"
                                                                          routes={Object {}}
                                                                          session={
                                                                                                    Object {
                                                                                                                              "isAuthenticated": true,
                                                                                                                            }
                                                                          }
                                                />,
                                                                      }
                        }
/>,
                    },
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                                    Object {
                                                      "children": <UnauthenticatedRoute
                                                        component={[Function]}
                                                        path="/login"
                                                        routes={Object {}}
                                                        session={
                                                                            Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                                        }
                                    />,
                                                    }
                  }
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div />,
                "context": Object {},
                "current": [Circular],
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                                        Object {
                                                            "children": <UnauthenticatedRoute
                                                              component={[Function]}
                                                              path="/login"
                                                              routes={Object {}}
                                                              session={
                                                                                    Object {
                                                                                                          "isAuthenticated": true,
                                                                                                        }
                                                              }
                                        />,
                                                          }
                    }
/>,
                },
                "callbackList": null,
                "capturedValues": null,
                "expirationTime": 0,
                "first": null,
                "hasForceUpdate": false,
                "isInitialized": true,
                "isProcessing": false,
                "last": null,
              },
            },
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 2,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
        "props": Object {
          "children": <UnauthenticatedRoute
            component={[Function]}
            path="/login"
            routes={Object {}}
            session={
                        Object {
                                    "isAuthenticated": true,
                                  }
            }
/>,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <UnauthenticatedRoute
          component={[Function]}
          path="/login"
          routes={Object {}}
          session={
                    Object {
                              "isAuthenticated": true,
                            }
          }
/>,
      },
      "ref": null,
      "rendered": Object {
        "instance": Router {
          "__reactInternalMemoizedMaskedChildContext": Object {
            "router": undefined,
          },
          "__reactInternalMemoizedMergedChildContext": Object {
            "router": Object {
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 2,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
              "route": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
              },
            },
          },
          "__reactInternalMemoizedUnmaskedChildContext": Object {},
          "_reactInternalFiber": FiberNode {
            "_debugID": 34,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": FiberNode {
              "_debugID": 33,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 32,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 30,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 30,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div />,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "capturedValues": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "capturedValue": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "capturedValue": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": <UnauthenticatedRoute
                                                                    component={[Function]}
                                                                    path="/login"
                                                                    routes={Object {}}
                                                                    session={
                                                                                            Object {
                                                                                                                    "isAuthenticated": true,
                                                                                                                  }
                                                                    }
                                            />,
                                                                }
                      }
/>,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "children": <UnauthenticatedRoute
                                                                          component={[Function]}
                                                                          path="/login"
                                                                          routes={Object {}}
                                                                          session={
                                                                                                    Object {
                                                                                                                              "isAuthenticated": true,
                                                                                                                            }
                                                                          }
                                                />,
                                                                      }
                        }
/>,
                    },
                    "callbackList": null,
                    "capturedValues": null,
                    "expirationTime": 0,
                    "first": null,
                    "hasForceUpdate": false,
                    "isInitialized": true,
                    "isProcessing": false,
                    "last": null,
                  },
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 32,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 30,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 30,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div />,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "capturedValues": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "capturedValue": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "capturedValue": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": <UnauthenticatedRoute
                                                                    component={[Function]}
                                                                    path="/login"
                                                                    routes={Object {}}
                                                                    session={
                                                                                            Object {
                                                                                                                    "isAuthenticated": true,
                                                                                                                  }
                                                                    }
                                            />,
                                                                }
                      }
/>,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "children": <UnauthenticatedRoute
                                                                          component={[Function]}
                                                                          path="/login"
                                                                          routes={Object {}}
                                                                          session={
                                                                                                    Object {
                                                                                                                              "isAuthenticated": true,
                                                                                                                            }
                                                                          }
                                                />,
                                                                      }
                        }
/>,
                    },
                    "callbackList": null,
                    "capturedValues": null,
                    "expirationTime": 0,
                    "first": null,
                    "hasForceUpdate": false,
                    "isInitialized": true,
                    "isProcessing": false,
                    "last": null,
                  },
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": HashRouter {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 2,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 35,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": Object {
                "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.spec.js",
                "lineNumber": 17,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 36,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.js",
                  "lineNumber": 13,
                },
                "alternate": null,
                "child": null,
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "path": "/login",
                  "render": [Function],
                },
                "memoizedState": Object {
                  "match": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "path": "/login",
                  "render": [Function],
                },
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Route {
                  "__reactInternalMemoizedMaskedChildContext": Object {
                    "router": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "route": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                      },
                    },
                  },
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "router": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "route": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                      },
                    },
                  },
                  "__reactInternalMemoizedUnmaskedChildContext": Object {
                    "router": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "route": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                      },
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {
                    "router": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "route": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                      },
                    },
                  },
                  "props": Object {
                    "path": "/login",
                    "render": [Function],
                  },
                  "refs": Object {},
                  "state": Object {
                    "match": null,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": [Function],
                "path": "/login",
                "routes": Object {},
                "session": Object {
                  "isAuthenticated": true,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": [Function],
                "path": "/login",
                "routes": Object {},
                "session": Object {
                  "isAuthenticated": true,
                },
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": null,
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 2,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "match": Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <UnauthenticatedRoute
                component={[Function]}
                path="/login"
                routes={Object {}}
                session={
                                Object {
                                                "isAuthenticated": true,
                                              }
                }
/>,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 2,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 33,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 32,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 30,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 30,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div />,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "capturedValues": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "capturedValue": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "capturedValue": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": <UnauthenticatedRoute
                                                                    component={[Function]}
                                                                    path="/login"
                                                                    routes={Object {}}
                                                                    session={
                                                                                            Object {
                                                                                                                    "isAuthenticated": true,
                                                                                                                  }
                                                                    }
                                            />,
                                                                }
                      }
/>,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "children": <UnauthenticatedRoute
                                                                          component={[Function]}
                                                                          path="/login"
                                                                          routes={Object {}}
                                                                          session={
                                                                                                    Object {
                                                                                                                              "isAuthenticated": true,
                                                                                                                            }
                                                                          }
                                                />,
                                                                      }
                        }
/>,
                    },
                    "callbackList": null,
                    "capturedValues": null,
                    "expirationTime": 0,
                    "first": null,
                    "hasForceUpdate": false,
                    "isInitialized": true,
                    "isProcessing": false,
                    "last": null,
                  },
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": null,
              "alternate": null,
              "child": [Circular],
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <UnauthenticatedRoute
                  component={[Function]}
                  path="/login"
                  routes={Object {}}
                  session={
                                    Object {
                                                      "isAuthenticated": true,
                                                    }
                  }
/>,
              },
              "ref": null,
              "return": FiberNode {
                "_debugID": 32,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": null,
                "child": [Circular],
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "memoizedState": Object {
                  "context": null,
                  "mount": true,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": null,
                  "props": Object {
                    "children": <UnauthenticatedRoute
                      component={[Function]}
                      path="/login"
                      routes={Object {}}
                      session={
                                            Object {
                                                                  "isAuthenticated": true,
                                                                }
                      }
/>,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 30,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": FiberNode {
                    "_debugID": 30,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": [Circular],
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 1,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div />,
                      "context": Object {},
                      "current": [Circular],
                      "finishedWork": null,
                      "firstBatch": null,
                      "hydrate": false,
                      "nextScheduledRoot": null,
                      "pendingChildren": null,
                      "pendingCommitExpirationTime": 0,
                      "pendingContext": null,
                      "remainingExpirationTime": 0,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": null,
                      "callbackList": null,
                      "capturedValues": null,
                      "expirationTime": 1,
                      "first": Object {
                        "callback": null,
                        "capturedValue": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                      },
                      "hasForceUpdate": false,
                      "isInitialized": false,
                      "isProcessing": false,
                      "last": Object {
                        "callback": null,
                        "capturedValue": null,
                        "expirationTime": 1,
                        "isForced": false,
                        "isReplace": false,
                        "next": null,
                        "partialState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                                                        Object {
                                                                                    "children": <UnauthenticatedRoute
                                                                                      component={[Function]}
                                                                                      path="/login"
                                                                                      routes={Object {}}
                                                                                      session={
                                                                                                                    Object {
                                                                                                                                                  "isAuthenticated": true,
                                                                                                                                                }
                                                                                      }
                                                        />,
                                                                                  }
                            }
/>,
                        },
                      },
                    },
                  },
                  "child": [Circular],
                  "effectTag": 32,
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                                            Object {
                                                                  "children": <UnauthenticatedRoute
                                                                    component={[Function]}
                                                                    path="/login"
                                                                    routes={Object {}}
                                                                    session={
                                                                                            Object {
                                                                                                                    "isAuthenticated": true,
                                                                                                                  }
                                                                    }
                                            />,
                                                                }
                      }
/>,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "sibling": null,
                  "stateNode": Object {
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedWork": null,
                    "firstBatch": null,
                    "hydrate": false,
                    "nextScheduledRoot": null,
                    "pendingChildren": null,
                    "pendingCommitExpirationTime": 0,
                    "pendingContext": null,
                    "remainingExpirationTime": 0,
                  },
                  "tag": 3,
                  "type": null,
                  "updateQueue": Object {
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                                                Object {
                                                                        "children": <UnauthenticatedRoute
                                                                          component={[Function]}
                                                                          path="/login"
                                                                          routes={Object {}}
                                                                          session={
                                                                                                    Object {
                                                                                                                              "isAuthenticated": true,
                                                                                                                            }
                                                                          }
                                                />,
                                                                      }
                        }
/>,
                    },
                    "callbackList": null,
                    "capturedValues": null,
                    "expirationTime": 0,
                    "first": null,
                    "hasForceUpdate": false,
                    "isInitialized": true,
                    "isProcessing": false,
                    "last": null,
                  },
                },
                "sibling": null,
                "stateNode": WrapperComponent {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                    },
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": HashRouter {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 2,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "props": Object {
                  "children": <UnauthenticatedRoute
                    component={[Function]}
                    path="/login"
                    routes={Object {}}
                    session={
                                        Object {
                                                            "isAuthenticated": true,
                                                          }
                    }
/>,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "sibling": null,
            "stateNode": [Circular],
            "tag": 2,
            "type": [Function],
            "updateQueue": null,
          },
          "_reactInternalInstance": Object {},
          "context": Object {
            "router": undefined,
          },
          "props": Object {
            "children": <UnauthenticatedRoute
              component={[Function]}
              path="/login"
              routes={Object {}}
              session={
                            Object {
                                          "isAuthenticated": true,
                                        }
              }
/>,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 2,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "refs": Object {},
          "state": Object {
            "match": Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            },
          },
          "unlisten": [Function],
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <UnauthenticatedRoute
            component={[Function]}
            path="/login"
            routes={Object {}}
            session={
                        Object {
                                    "isAuthenticated": true,
                                  }
            }
/>,
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 2,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "component": [Function],
            "path": "/login",
            "routes": Object {},
            "session": Object {
              "isAuthenticated": true,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": Route {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "router": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 2,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "route": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                  },
                },
              },
              "__reactInternalMemoizedMergedChildContext": Object {
                "router": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 2,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "route": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                  },
                },
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "router": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 2,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "route": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                  },
                },
              },
              "_reactInternalFiber": FiberNode {
                "_debugID": 36,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 35,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": Object {
                    "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.spec.js",
                    "lineNumber": 17,
                  },
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": [Function],
                    "path": "/login",
                    "routes": Object {},
                    "session": Object {
                      "isAuthenticated": true,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": [Function],
                    "path": "/login",
                    "routes": Object {},
                    "session": Object {
                      "isAuthenticated": true,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 34,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 33,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 32,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 30,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div />,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": <UnauthenticatedRoute
                                                                                                  component={[Function]}
                                                                                                  path="/login"
                                                                                                  routes={Object {}}
                                                                                                  session={
                                                                                                                                    Object {
                                                                                                                                                                      "isAuthenticated": true,
                                                                                                                                                                    }
                                                                                                  }
                                                                />,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 32,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 30,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div />,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": <UnauthenticatedRoute
                                                                                                  component={[Function]}
                                                                                                  path="/login"
                                                                                                  routes={Object {}}
                                                                                                  session={
                                                                                                                                    Object {
                                                                                                                                                                      "isAuthenticated": true,
                                                                                                                                                                    }
                                                                                                  }
                                                                />,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": HashRouter {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 2,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                        "refs": Object {},
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "memoizedState": Object {
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 33,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 32,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 30,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div />,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": <UnauthenticatedRoute
                                                                                                  component={[Function]}
                                                                                                  path="/login"
                                                                                                  routes={Object {}}
                                                                                                  session={
                                                                                                                                    Object {
                                                                                                                                                                      "isAuthenticated": true,
                                                                                                                                                                    }
                                                                                                  }
                                                                />,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 32,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 30,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div />,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": <UnauthenticatedRoute
                                                                                                  component={[Function]}
                                                                                                  path="/login"
                                                                                                  routes={Object {}}
                                                                                                  session={
                                                                                                                                    Object {
                                                                                                                                                                      "isAuthenticated": true,
                                                                                                                                                                    }
                                                                                                  }
                                                                />,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": HashRouter {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 2,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                        "refs": Object {},
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": Router {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "router": undefined,
                      },
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "router": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 2,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                        },
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {},
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {
                        "router": undefined,
                      },
                      "props": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 2,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                      },
                      "unlisten": [Function],
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": Object {
                  "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.js",
                  "lineNumber": 13,
                },
                "alternate": null,
                "child": null,
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "path": "/login",
                  "render": [Function],
                },
                "memoizedState": Object {
                  "match": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "path": "/login",
                  "render": [Function],
                },
                "ref": null,
                "return": FiberNode {
                  "_debugID": 35,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": Object {
                    "fileName": "/Users/rahulsingh/Documents/Globallogic/Projects/MyGoals/FastTrack/MyGoals.Web/admin-portal/src/components/common/UnauthenticatedRoute/index.spec.js",
                    "lineNumber": 17,
                  },
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": [Function],
                    "path": "/login",
                    "routes": Object {},
                    "session": Object {
                      "isAuthenticated": true,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": [Function],
                    "path": "/login",
                    "routes": Object {},
                    "session": Object {
                      "isAuthenticated": true,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 34,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 33,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 32,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 30,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div />,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": <UnauthenticatedRoute
                                                                                                  component={[Function]}
                                                                                                  path="/login"
                                                                                                  routes={Object {}}
                                                                                                  session={
                                                                                                                                    Object {
                                                                                                                                                                      "isAuthenticated": true,
                                                                                                                                                                    }
                                                                                                  }
                                                                />,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 32,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 30,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div />,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": <UnauthenticatedRoute
                                                                                                  component={[Function]}
                                                                                                  path="/login"
                                                                                                  routes={Object {}}
                                                                                                  session={
                                                                                                                                    Object {
                                                                                                                                                                      "isAuthenticated": true,
                                                                                                                                                                    }
                                                                                                  }
                                                                />,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": HashRouter {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 2,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                        "refs": Object {},
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "memoizedState": Object {
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <UnauthenticatedRoute
                        component={[Function]}
                        path="/login"
                        routes={Object {}}
                        session={
                                                Object {
                                                                        "isAuthenticated": true,
                                                                      }
                        }
/>,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 2,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 33,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 32,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 30,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div />,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": <UnauthenticatedRoute
                                                                                                  component={[Function]}
                                                                                                  path="/login"
                                                                                                  routes={Object {}}
                                                                                                  session={
                                                                                                                                    Object {
                                                                                                                                                                      "isAuthenticated": true,
                                                                                                                                                                    }
                                                                                                  }
                                                                />,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 32,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "memoizedState": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "children": <UnauthenticatedRoute
                              component={[Function]}
                              path="/login"
                              routes={Object {}}
                              session={
                                                            Object {
                                                                                          "isAuthenticated": true,
                                                                                        }
                              }
/>,
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 30,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 30,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 1,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": null,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div />,
                              "context": Object {},
                              "current": [Circular],
                              "finishedWork": null,
                              "firstBatch": null,
                              "hydrate": false,
                              "nextScheduledRoot": null,
                              "pendingChildren": null,
                              "pendingCommitExpirationTime": 0,
                              "pendingContext": null,
                              "remainingExpirationTime": 0,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "baseState": null,
                              "callbackList": null,
                              "capturedValues": null,
                              "expirationTime": 1,
                              "first": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                              "hasForceUpdate": false,
                              "isInitialized": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "capturedValue": null,
                                "expirationTime": 1,
                                "isForced": false,
                                "isReplace": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                                                        Object {
                                                                                                            "children": <UnauthenticatedRoute
                                                                                                              component={[Function]}
                                                                                                              path="/login"
                                                                                                              routes={Object {}}
                                                                                                              session={
                                                                                                                                                    Object {
                                                                                                                                                                                          "isAuthenticated": true,
                                                                                                                                                                                        }
                                                                                                              }
                                                                        />,
                                                                                                          }
                                    }
/>,
                                },
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 32,
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                                            Object {
                                                                                          "children": <UnauthenticatedRoute
                                                                                            component={[Function]}
                                                                                            path="/login"
                                                                                            routes={Object {}}
                                                                                            session={
                                                                                                                            Object {
                                                                                                                                                            "isAuthenticated": true,
                                                                                                                                                          }
                                                                                            }
                                                            />,
                                                                                        }
                              }
/>,
                          },
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedWork": null,
                            "firstBatch": null,
                            "hydrate": false,
                            "nextScheduledRoot": null,
                            "pendingChildren": null,
                            "pendingCommitExpirationTime": 0,
                            "pendingContext": null,
                            "remainingExpirationTime": 0,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                                                Object {
                                                                                                "children": <UnauthenticatedRoute
                                                                                                  component={[Function]}
                                                                                                  path="/login"
                                                                                                  routes={Object {}}
                                                                                                  session={
                                                                                                                                    Object {
                                                                                                                                                                      "isAuthenticated": true,
                                                                                                                                                                    }
                                                                                                  }
                                                                />,
                                                                                              }
                                }
/>,
                            },
                            "callbackList": null,
                            "capturedValues": null,
                            "expirationTime": 0,
                            "first": null,
                            "hasForceUpdate": false,
                            "isInitialized": true,
                            "isProcessing": false,
                            "last": null,
                          },
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": null,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": null,
                            "mount": true,
                            "props": Object {
                              "children": <UnauthenticatedRoute
                                component={[Function]}
                                path="/login"
                                routes={Object {}}
                                session={
                                                                Object {
                                                                                                "isAuthenticated": true,
                                                                                              }
                                }
/>,
                            },
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": HashRouter {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 2,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "props": Object {
                          "children": <UnauthenticatedRoute
                            component={[Function]}
                            path="/login"
                            routes={Object {}}
                            session={
                                                        Object {
                                                                                    "isAuthenticated": true,
                                                                                  }
                            }
/>,
                        },
                        "refs": Object {},
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": Router {
                      "__reactInternalMemoizedMaskedChildContext": Object {
                        "router": undefined,
                      },
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "router": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 2,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                        },
                      },
                      "__reactInternalMemoizedUnmaskedChildContext": Object {},
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {
                        "router": undefined,
                      },
                      "props": Object {
                        "children": <UnauthenticatedRoute
                          component={[Function]}
                          path="/login"
                          routes={Object {}}
                          session={
                                                    Object {
                                                                              "isAuthenticated": true,
                                                                            }
                          }
/>,
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 2,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                      },
                      "unlisten": [Function],
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "context": Object {
                "router": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 2,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "route": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                  },
                },
              },
              "props": Object {
                "path": "/login",
                "render": [Function],
              },
              "refs": Object {},
              "state": Object {
                "match": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "path": "/login",
              "render": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
